{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Content","Footer","Readme","readme","ref","useRef","useEffect","ReactDOM","render","source","current","App","rows","Object","values","arcs","map","proposal","metadata","arc","key","title","authors","topic","status","columns","dataIndex","sorter","onClick","bind","tag","toLowerCase","color","toUpperCase","landingPage","dataSource","id","console","log","content","setBody","useState","body","className","style","padding","textAlign","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","document","getElementById"],"mappings":"uRAQQA,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAEnBC,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACRC,EAAMC,iBAAO,MAQnB,OANAC,qBAAU,WACFH,GAAUC,GACVG,IAASC,OAAO,cAAC,IAAD,CAAeC,OAAQN,IAAYC,EAAIM,WAE5D,CAACP,IAEG,qBAAKC,IAAKA,KAuFNO,MApFf,WAAgB,IAAD,OACLC,EAAOC,OAAOC,OAAOC,GAAMC,KAAI,SAAAC,GAAa,IAAD,EACEA,EAASC,SAAhDC,EADqC,EACrCA,IACR,MAAO,CAAEC,IAAKD,EAAKA,MAAKE,MAFqB,EAChCA,MACkBC,QAFc,EACzBA,QACoBC,MAFK,EAChBA,MACkBC,OAFF,EACTA,WAIlCC,EAAU,CACZ,CACIJ,MAAO,MACPK,UAAW,MACXN,IAAK,MACLO,QAAQ,EACRnB,OAAQ,SAAAW,GAAG,OAAI,mBAAGS,QAASX,EAASY,KAAK,EAAMV,GAAhC,SAAuCA,MAE1D,CACIE,MAAO,QACPK,UAAW,QACXN,IAAK,SAET,CACIC,MAAO,UACPK,UAAW,UACXN,IAAK,WAET,CACIC,MAAO,QACPK,UAAW,QACXN,IAAK,QACLO,QAAQ,EACRnB,OAAQ,SAAAe,GACJ,IAAIO,EAAMP,EAAMQ,cACZC,EAAQ,QAQZ,MAPY,aAARF,EACAE,EAAQ,OACO,YAARF,EACPE,EAAQ,SACO,gBAARF,IACPE,EAAQ,WAGR,cAAC,IAAD,CAAKA,MAAOA,EAAZ,SACKF,EAAIG,eADeH,KAMpC,CACIT,MAAO,SACPK,UAAW,SACXN,IAAK,SACLO,QAAQ,IAIVO,EAAc,kBAAM,cAAC,IAAD,CAAOC,WAAYvB,EAAMa,QAASA,KAEtDR,EAAW,SAACmB,GACdC,QAAQC,IAAIF,GACZ,IAAMnB,EAAWF,EAAKqB,GAAIG,QAC1BC,EAAQ,eAAC,IAAD,WACJ,sCAASJ,EAAT,KAAerB,EAAKqB,GAAIlB,SAASG,SACjC,uBACA,cAAC,EAAD,CAAQlB,OAAQc,SA9Db,EAkEawB,mBAASP,KAlEtB,mBAkEJQ,EAlEI,KAkEEF,EAlEF,KAoEX,OACI,eAAC,IAAD,CAAQG,UAAU,SAAlB,UACI,cAAC7C,EAAD,CAAQ6C,UAAU,SAAlB,SACI,mBAAGf,QAAS,kBAAMY,EAAQN,MAA1B,SAA0C,qBAAKS,UAAU,aAK7D,cAAC3C,EAAD,CAAS4C,MAAO,CAAEC,QAAS,aAA3B,SACKH,IAEL,eAACzC,EAAD,CAAQ2C,MAAO,CAAEE,UAAW,UAA5B,uBAAkD,mBAAGC,KAAK,iCAAR,oCAAlD,WCzFGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCd1C,IAASC,OACP,cAAC,IAAMiD,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.5f047a22.chunk.js","sourcesContent":["import './App.css';\nimport arcs from './arcs.json';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactMarkdown from 'react-markdown';\n\nimport { Button, Card, Col, Divider, Form, Input, Layout, Menu, Row, Table, Tag } from 'antd';\nconst { Header, Content, Footer } = Layout;\n\nconst Readme = ({ readme }) => {\n    const ref = useRef(null);\n\n    useEffect(() => {\n        if (readme && ref) {\n            ReactDOM.render(<ReactMarkdown source={readme} />, ref.current)\n        }\n    }, [readme])\n\n    return <div ref={ref} />\n}\n\nfunction App() {\n    const rows = Object.values(arcs).map(proposal => {\n        const { arc, title, authors, topic, status } = proposal.metadata;\n        return { key: arc, arc, title, authors, topic, status }\n    });\n\n    const columns = [\n        {\n            title: 'ARC',\n            dataIndex: 'arc',\n            key: 'arc',\n            sorter: true,\n            render: arc => <a onClick={proposal.bind(this, arc)}>{arc}</a>,\n        },\n        {\n            title: 'Title',\n            dataIndex: 'title',\n            key: 'title',\n        },\n        {\n            title: 'Authors',\n            dataIndex: 'authors',\n            key: 'authors',\n        },\n        {\n            title: 'Topic',\n            dataIndex: 'topic',\n            key: 'topic',\n            sorter: true,\n            render: topic => {\n                let tag = topic.toLowerCase();\n                let color = 'green';\n                if (tag === 'protocol') {\n                    color = 'blue';\n                } else if (tag === 'network') {\n                    color = 'purple';\n                } else if (tag === 'application') {\n                    color = 'magenta';\n                }\n                return (\n                    <Tag color={color} key={tag}>\n                        {tag.toUpperCase()}\n                    </Tag>\n                );\n            },\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            sorter: true,\n        }\n    ];\n\n    const landingPage = () => <Table dataSource={rows} columns={columns} />;\n\n    const proposal = (id) => {\n        console.log(id);\n        const proposal = arcs[id].content;\n        setBody(<Card>\n            <h1>ARC-{id}: {arcs[id].metadata.title}</h1>\n            <br/>\n            <Readme readme={proposal}/>\n        </Card>)\n    }\n\n    const [body, setBody] = useState(landingPage());\n\n    return (\n        <Layout className=\"layout\">\n            <Header className=\"header\">\n                <a onClick={() => setBody(landingPage())}><div className=\"logo\"/></a>\n                {/*<Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>*/}\n                {/*    <Menu.Item key=\"1\"></Menu.Item>*/}\n                {/*</Menu>*/}\n            </Header>\n            <Content style={{ padding: '50px 50px' }}>\n                {body}\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Visit the <a href=\"https://github.com/AleoHQ/ARCs\">ARCs Github repository</a>.</Footer>\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}