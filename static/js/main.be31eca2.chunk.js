(this.webpackJsonpsite=this.webpackJsonpsite||[]).push([[0],{154:function(e,t,n){},155:function(e,t,n){},306:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(27),s=n.n(o),i=(n(154),n(146)),c=(n(155),n(93)),d=n(134),l=n.n(d),p=n(309),u=n(312),h=n(310),f=n(311),b=n(22),j=p.a.Header,v=p.a.Content,m=p.a.Footer,w=function(e){var t=e.readme,n=Object(a.useRef)(null);return Object(a.useEffect)((function(){t&&n&&s.a.render(Object(b.jsx)(l.a,{source:t}),n.current)}),[t]),Object(b.jsx)("div",{ref:n})};var g=function(){var e=this,t=Object.values(c).map((function(e){var t=e.metadata,n=t.arc;return{key:n,arc:n,title:t.title,authors:t.authors,topic:t.topic,status:t.status}})),n=[{title:"ARC",dataIndex:"arc",key:"arc",sorter:!0,render:function(t){return Object(b.jsx)("a",{onClick:o.bind(e,t),children:t})}},{title:"Title",dataIndex:"title",key:"title"},{title:"Authors",dataIndex:"authors",key:"authors"},{title:"Topic",dataIndex:"topic",key:"topic",sorter:!0,render:function(e){var t=e.toLowerCase(),n="green";return"protocol"===t?n="blue":"network"===t?n="purple":"application"===t&&(n="magenta"),Object(b.jsx)(u.a,{color:n,children:t.toUpperCase()},t)}},{title:"Status",dataIndex:"status",key:"status",sorter:!0}],r=function(){return Object(b.jsx)(h.a,{dataSource:t,columns:n})},o=function(e){console.log(e);var t=c[e].content;g(Object(b.jsxs)(f.a,{children:[Object(b.jsxs)("h1",{children:["ARC-",e,": ",c[e].metadata.title]}),Object(b.jsx)("br",{}),Object(b.jsx)(w,{readme:t})]}))},s=Object(a.useState)(r()),d=Object(i.a)(s,2),l=d[0],g=d[1];return Object(b.jsxs)(p.a,{className:"layout",children:[Object(b.jsx)(j,{className:"header",children:Object(b.jsx)("a",{onClick:function(){return g(r())},children:Object(b.jsx)("div",{className:"logo"})})}),Object(b.jsx)(v,{style:{padding:"50px 50px"},children:l}),Object(b.jsxs)(m,{style:{textAlign:"center"},children:["Visit the ",Object(b.jsx)("a",{href:"https://github.com/AleoHQ/ARCs",children:"ARCs Github repository"}),"."]})]})},x=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,313)).then((function(t){var n=t.getCLS,a=t.getFID,r=t.getFCP,o=t.getLCP,s=t.getTTFB;n(e),a(e),r(e),o(e),s(e)}))};n(305);s.a.render(Object(b.jsx)(r.a.StrictMode,{children:Object(b.jsx)(g,{})}),document.getElementById("root")),x()},93:function(e){e.exports=JSON.parse('{"1":{"metadata":{"arc":1,"title":"ARC Proposal Guidelines","authors":"The Aleo Team <hello@aleo.org>","topic":"Meta","status":"Living","reviewers":"Howard Wu <howard@aleo.org>","created":"2020-02-07T00:00:00.000Z"},"content":"\\n## Overview\\n\\nAleo Request for Comments (ARCs) are protocol-level, network-level, and application-level standards for the Aleo ecosystem.\\n\\n## Topics\\n\\nARC standards proposals should be labeled with one of the following categories:\\n  - `Protocol`: all core features, system parameters, consensus upgrades, and cryptographic protocols\\n  - `Networking`: all communication protocols, message formats, and RPC standards\\n  - `Application`: all application-level standards and conventions\\n  - `Meta`: all informational and general-purpose notices\\n\\n\\n## Process\\n\\n```mermaid\\ngraph LR\\n    subgraph authors\\n        idea([Idea]) --\x3e draft([Draft])\\n        draft([Draft]) --\x3e active([Active])\\n    end\\n    \\n\\n    idea([Idea]) -.-> withdrawn([Withdrawn])\\n    draft([Draft]) -.-> withdrawn([Withdrawn])\\n    active([Active]) -.-> withdrawn([Withdrawn])\\n    \\n    subgraph reviewers\\n        active([Active]) --\x3e decision{Decision}\\n        decision{Decision} --\x3e accepted([Accepted])\\n        decision{Decision} -.-> rejected([Rejected])\\n    end\\n    \\n    subgraph standards\\n        accepted([Accepted]) --\x3e final([Final])\\n        accepted([Accepted]) --\x3e living([Living])\\n        final([Final]) -.-> deprecated([Deprecated])\\n    end\\n```\\n\\n`Idea` refers to a proposal that is in the brainstorming phase and is not ready for review.\\n\\n`Draft` refers to a proposal that is currently undergoing development and is not ready for review.\\n\\n`Active` refers to a proposal with a reference implementation that is ready for review.\\n\\n`Withdrawn` refers to a proposal that was previously marked as `Idea`, `Draft`, or `Active`.\\n\\n`Accepted` refers to a proposal that was `Active` with a reference implementation, and has been approved by reviewer(s).\\n\\n`Rejected` refers to a proposal that was `Active` with a reference implementation, and has been denied by reviewer(s).\\n\\n`Final` refers to a proposal that was `Accepted`, and the reference implementation has been incorporated into Aleo. \\n\\n`Deprecated` refers to a proposal that has been superseded or replaced by a new proposal that is now marked as `Final`.\\n\\n`Living` refers to a proposal that was `Accepted` and intended to remain as a living document.\\n\\n"}}')}},[[306,1,2]]]);
//# sourceMappingURL=main.be31eca2.chunk.js.map